<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" total="5" passed="1">
  <reporter-output>
    <line>
      <![CDATA[sssssssss]]>
    </line>
    <line>
      <![CDATA[sssssssss]]>
    </line>
    <line>
      <![CDATA[sssssssss]]>
    </line>
    <line>
      <![CDATA[sssssssss]]>
    </line>
    <line>
      <![CDATA[sssssssss]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="44" started-at="2016-08-25T14:43:09Z" finished-at="2016-08-25T14:43:09Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="44" started-at="2016-08-25T14:43:09Z" finished-at="2016-08-25T14:43:09Z">
      <class name="train1.AppTest">
        <test-method status="PASS" signature="BeforeSuite()[pri:0, instance:train1.AppTest@5622fdf]" name="BeforeSuite" is-config="true" duration-ms="9" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite -->
        <test-method status="PASS" signature="BeforeTest()[pri:0, instance:train1.AppTest@5622fdf]" name="BeforeTest" is-config="true" duration-ms="1" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:train1.AppTest@5622fdf]" name="BeforeClass" is-config="true" duration-ms="0" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:train1.AppTest@5622fdf]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="FAIL" signature="test1()[pri:0, instance:train1.AppTest@5622fdf]" name="test1" duration-ms="3" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
	at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
	at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:24)
	at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:33)
	at train1.AppTest.test1(AppTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[sssssssss]]>
            </line>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:train1.AppTest@5622fdf]" name="AfterMethod" is-config="true" duration-ms="2" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:train1.AppTest@5622fdf]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="FAIL" signature="test1()[pri:0, instance:train1.AppTest@5622fdf]" name="test1" duration-ms="1" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
	at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
	at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:24)
	at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:33)
	at train1.AppTest.test1(AppTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[sssssssss]]>
            </line>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:train1.AppTest@5622fdf]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:train1.AppTest@5622fdf]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="FAIL" signature="test1()[pri:0, instance:train1.AppTest@5622fdf]" name="test1" duration-ms="1" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
	at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
	at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:24)
	at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:33)
	at train1.AppTest.test1(AppTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[sssssssss]]>
            </line>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:train1.AppTest@5622fdf]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:train1.AppTest@5622fdf]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="test1()[pri:0, instance:train1.AppTest@5622fdf]" name="test1" duration-ms="1" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
            <line>
              <![CDATA[sssssssss]]>
            </line>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:train1.AppTest@5622fdf]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:train1.AppTest@5622fdf]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="FAIL" signature="test1()[pri:0, instance:train1.AppTest@5622fdf]" name="test1" duration-ms="0" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
	at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
	at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:24)
	at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:33)
	at train1.AppTest.test1(AppTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[sssssssss]]>
            </line>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:train1.AppTest@5622fdf]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:train1.AppTest@5622fdf]" name="afterClass" is-config="true" duration-ms="0" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="AfterTest()[pri:0, instance:train1.AppTest@5622fdf]" name="AfterTest" is-config="true" duration-ms="0" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="AfterSuite()[pri:0, instance:train1.AppTest@5622fdf]" name="AfterSuite" is-config="true" duration-ms="0" started-at="2016-08-25T22:43:09Z" finished-at="2016-08-25T22:43:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- train1.AppTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
